dfl <- ts(log(df$Value), frequency = 12, start = c(2003, 1))
dfl
lm(Value ~ Data, dfl = dfl)
lm(Y ~ Data, dfl = dfl)
plot.ts(dfl)
df <- read_csv("IBC-Br (real dessazonalizado) (2002 = 100).csv")
colnames(df) <- c("Data", "Value", "1")
df <- df %>%
select(Data, Value) %>%
filter(!is.na(Value))
dfl <- ts(df$Value, frequency = 12, start = c(2003, 1))
plot.ts(dfl)
lm(log(Value) ~ Data, data = dfl)
dfl
12*20+2
fit <- arima(dfl,
order = c(0, 0, 0),
xreg = 1:242);fit
df <- read_csv("IBC-Br dessazonalizado (2002 = 100).csv")
lm(dfl ~ 1:242)
decompose(dfl, type="additive")
dec <- decompose(dfl, type="additive")
plot(dec)
library(readr)
library(tidyverse)
df <- read_csv("IBC-Br dessazonalizado (2002 = 100).csv")
colnames(df) <- c("Data", "Value", "1")
df <- df %>%
select(Data, Value) %>%
filter(!is.na(Value))
df <- ts(df$Value, start = c(2003, 1), frequency = 12)
library(forecast)
install.packages("mFilter")
library(mFilter)
df
fit <- tslm(df ~ trend)
summary(fit)
summary(fit$fitted.values)
summary(fit)
acf(residuals(fit))
pacf(residuals(fit))
plot(residuals(fit))
s.Date("2003-01") + 0:99
as.Date("2003-01") + 0:99
as.Date("2003-01-01") + 0:99
time(df)
as.numeric(time(df))
date_decimal(as.numeric(time(df)))
data <- data.frame(
month = as.numeric(time(df)),
trend = fit$fitted.values,
residual = fit$residuals,
series = fit$data$df
)
ggplot(data, aes(month, trend)) +
geom_line()
ggplot(data, aes(x = month)) +
geom_line(aes(y = trend)) +
geom_line(aes(y = (residual + 30) * 15)) +
scale_y_continuous(
sec.axis = sec_axis(~./30)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = trend)) +
geom_line(aes(y = (residual + 30) * 15)) +
scale_y_continuous(
sec.axis = sec_axis(~./15)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = trend)) +
geom_line(aes(y = (residual + 30) * 15)) +
scale_y_continuous(
sec.axis = sec_axis(~./15)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = trend)) +
geom_line(aes(y = residual * 15)) +
scale_y_continuous(
sec.axis = sec_axis(~./15)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = trend/15)) +
geom_line(aes(y = residual)) +
scale_y_continuous(
sec.axis = sec_axis(~.*15)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend/15)) +
scale_y_continuous(
sec.axis = sec_axis(~.*15)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend/15)) +
scale_y_continuous(
sec.axis = sec_axis(~.*1)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend)) +
scale_y_continuous(
sec.axis = sec_axis(~.*1)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend-150)) +
scale_y_continuous(
sec.axis = sec_axis(~.*1)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend-100)) +
scale_y_continuous(
sec.axis = sec_axis(~.*1)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend*1.5-100)) +
scale_y_continuous(
sec.axis = sec_axis(~.*1)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend*0.5-100)) +
scale_y_continuous(
sec.axis = sec_axis(~.*1)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend-100)) +
scale_y_continuous(
sec.axis = sec_axis(~.*1)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend-100)) +
scale_y_continuous(
sec.axis = sec_axis(~.*2)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend-100)) +
geom_line(aes(y = series-100)) +
scale_y_continuous(
sec.axis = sec_axis(~.*2)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend-100)) +
geom_line(aes(y = series-100)) +
scale_y_continuous(
name = "trend/series",
sec.axis = sec_axis(~.*2)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend-100)) +
geom_line(aes(y = series-100)) +
scale_y_continuous(
name = "Residuals",
sec.axis = sec_axis(~.*2)
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend-70)) +
geom_line(aes(y = series-70)) +
scale_y_continuous(
name = "Residuals",
sec.axis = sec_axis(~.*2)
)
df.hp <- hpfilter(df, freq=1600)
par(mfrow=c(2,1))
ts.plot(df, col="blue")
lines(df.hp$trend, col="red")
ts.plot(df.hp$cycle, col="green")
data <- data.frame(
month = as.numeric(time(df)),
series = df,
trend = df.hp$trend,
residual = df.hp$cycle
)
ggplot(data, aes(month)) +
geom_line(aes(y = trend)) +
geom_line(aes(y = series))
data <- data.frame(
month = as.numeric(time(df)),
series = df,
trend = df.hp$trend,
residual = df.hp$cycle
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = trend)) +
geom_line(aes(y = series))
data <- data.frame(
month = as.numeric(time(df)),
series = fit$data$df,
trend = df.hp$trend,
residual = df.hp$cycle
)
data <- data.frame(
month = as.numeric(time(df)),
series = df,
trend = df.hp$trend,
residual = df.hp$cycle
)
data <- data.frame(
month = as.numeric(time(df)),
trend = fit$fitted.values,
residual = fit$residuals,
series = fit$data$df
)
data <- data.frame(
month = as.numeric(time(df)),
series = df,
trend = df.hp$trend,
residual = df.hp$cycle
)
data <- data.frame(
month = as.numeric(time(df)),
trend = df.hp$trend,
residual = df.hp$cycle
)
df.hp$trend
str(df.hp$trend)
as.numeric(df.hp$trend)
data <- data.frame(
month = as.numeric(time(df)),
series = df,
trend = as.numeric(df.hp$trend),
residual = df.hp$cycle
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = trend)) +
geom_line(aes(y = series))
data %>%
pivot_longer(c(series, trend, residuals), names_to = "serie", values_to = "value")
data %>%
pivot_longer(c(series, trend, residual), names_to = "serie", values_to = "value")
data <- data %>%
pivot_longer(c(series, trend, residual), names_to = "serie", values_to = "value")
ggplot(data %>% filter(serie != "residual"), aes(month, value)) +
geom_line()
ggplot(data %>% filter(serie != "residual"), aes(month, value, color = serie)) +
geom_line()
df.hp <- hpfilter(df, freq=14400)
par(mfrow=c(2,1))
ts.plot(df, col="blue")
lines(df.hp$trend, col="red")
ts.plot(df.hp$cycle, col="green4")
df.hp <- hpfilter(df, freq = 14400)
data <- data.frame(
month = as.numeric(time(df)),
series = df,
trend = as.numeric(df.hp$trend),
residual = df.hp$cycle
)
data <- data %>%
pivot_longer(c(series, trend, residual), names_to = "serie", values_to = "value")
data %>% filter(serie != "residual") %>%
ggplot(aes(month, value, color = serie)) +
geom_line()
data %>%
mutate(residual = serie == "residual") %>%
ggplot(aes(month, value, color = serie)) +
geom_line() +
facet_wrap(vars(residual))
data %>%
mutate(residual = serie == "residual") %>%
ggplot(aes(month, value, color = serie)) +
geom_line() +
facet_wrap(~residual, nrow = 2)
data %>%
mutate(residual = serie == "residual") %>%
ggplot(aes(month, value, color = serie)) +
geom_line() +
facet_wrap(~residual, nrow = 2, scales = "free")
ipca <- read_csv("IPCA variacao.csv")
View(ipca)
ipca <- read_csv("IPCA variacao.csv")
View(ipca)
df
ipca
df
ipca %>%
filter(Data >= 2003)
ipca %>%
mutate(Data = date_decimal(Data))
filter(Data >= 2003)
ipca %>%
mutate(Data = date_decimal(Data)) %>%
filter(Data >= 2003)
ipca %>%
mutate(Data = date_decimal(Data)) %>%
View()
ipca %>%
View()
ipca %>%
filter(Data >= 2003)
ipca %>%
filter(Data >= 2003) %>%
View()
ipca %>%
filter(Data >= 2003.01 & Data <= 2003.02) %>%
View()
ipca %>%
filter(Data >= 2003.01 & Data <= 2023.02) %>%
View()
df
colnames(ipca)
colnames(ipca) <- c("Data", "Value", "1")
ipca %>%
filter(Data >= 2003.01 & Data <= 2023.02)
ipca %>%
select(Data, Value) %>%
filter(Data >= 2003.01 & Data <= 2023.02)
ipca <- ipca %>%
select(Data, Value) %>%
filter(Data >= 2003.01 & Data <= 2023.02)
ipca <- ts(df$Value, start = c(2003, 1), frequency = 12)
ipca <- ts(ipca$Value, start = c(2003, 1), frequency = 12)
data <- data.frame(
month = as.numeric(time(df)),
hiato = df.hp$cycle,
ipca = as.numeric(ipca)
)
data <- data.frame(
month = as.numeric(time(df)),
hiato = df.hp$cycle,
ipca = as.numeric(ipca)
) %>%
pivot_longer(c(hiato, ipca), names_to = "serie", values_to = "value")
View(data)
data %>%
ggplot(aes(month, value, color = serie)) +
geom_line()
data <- data.frame(
month = as.numeric(time(df)),
hiato = df.hp$cycle,
ipca = as.numeric(ipca)
)
data %>%
ggplot(aes(x = month)) +
geom_line(aes(y = hiato)) +
geom_line(aes(y = ipca)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~.*1, name = "")
)
data %>%
ggplot(aes(x = month)) +
geom_line(aes(y = hiato, color = blue)) +
geom_line(aes(y = ipca)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~.*1, name = "")
)
data %>%
ggplot(aes(x = month)) +
geom_line(aes(y = hiato, color = "blue")) +
geom_line(aes(y = ipca)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~.*1, name = "")
)
data %>%
ggplot(aes(x = month)) +
geom_line(aes(y = hiato), color = "blue") +
geom_line(aes(y = ipca)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~.*1, name = "")
)
data %>%
ggplot(aes(x = month)) +
geom_line(aes(y = hiato), color = "red") +
geom_line(aes(y = ipca)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~.*1, name = "")
)
data %>%
ggplot(aes(x = month)) +
geom_line(aes(y = hiato), color = "red") +
geom_line(aes(y = ipca*5)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~.*1, name = "")
)
data %>%
ggplot(aes(x = month)) +
geom_line(aes(y = hiato), color = "red") +
geom_line(aes(y = ipca*5)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~./5, name = "")
)
fit <- tslm(df ~ trend)
acf(residuals(fit))
pacf(residuals(fit))
plot(residuals(fit))
acf(residuals(fit))
pacf(residuals(fit))
plot(residuals(fit))
data <- data.frame(
month = as.numeric(time(df)),
trend = fit$fitted.values,
residual = fit$residuals,
series = fit$data$df
)
ggplot(data, aes(x = month)) +
geom_line(aes(y = residual)) +
geom_line(aes(y = trend-70)) +
geom_line(aes(y = series-70)) +
scale_y_continuous(
name = "Residuals",
sec.axis = sec_axis(~.*2)
)
df.hp <- hpfilter(df, freq = 14400)
data <- data.frame(
month = as.numeric(time(df)),
series = df,
trend = as.numeric(df.hp$trend),
residual = df.hp$cycle
)
data <- data %>%
pivot_longer(c(series, trend, residual), names_to = "serie", values_to = "value")
data %>%
mutate(residual = serie == "residual") %>%
ggplot(aes(month, value, color = serie)) +
geom_line() +
facet_wrap(~residual, nrow = 2, scales = "free")
data <- data.frame(
month = as.numeric(time(df)),
hiato = df.hp$cycle,
ipca = as.numeric(ipca)
)
data %>%
ggplot(aes(x = month)) +
geom_line(aes(y = hiato), color = "red") +
geom_line(aes(y = ipca*5)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~./5, name = "")
)
data %>%
ggplot(aes(x = month)) +
# geom_line(aes(y = hiato), color = "red") +
geom_line(aes(y = ipca*5)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~./5, name = "")
)
data %>%
ggplot(aes(x = month)) +
geom_line(aes(y = hiato), color = "red") +
# geom_line(aes(y = ipca*5)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~./5, name = "")
)
data %>%
ggplot(aes(x = month)) +
geom_line(aes(y = hiato), color = "red") +
geom_line(aes(y = ipca*5)) +
scale_y_continuous(
sec.axis = sec_axis(trans = ~./5, name = "")
)
data %>%
mutate(residual = serie == "residual") %>%
ggplot(aes(month, value, color = serie)) +
geom_line() +
facet_wrap(~residual, nrow = 2, scales = "free")
data <- data.frame(
month = as.numeric(time(df)),
series = df,
trend = as.numeric(df.hp$trend),
residual = df.hp$cycle
)
data <- data %>%
pivot_longer(c(series, trend, residual), names_to = "serie", values_to = "value")
data %>%
mutate(residual = serie == "residual") %>%
ggplot(aes(month, value, color = serie)) +
geom_line() +
facet_wrap(~residual, nrow = 2, scales = "free")
library(tidyverse)
library(fixest)
library(modelsummary)
library(MatchIt)
library(sf)
library(readr)
municipios <- readRDS(file = "municipios.rds")
municipios <- readRDS(file = "municipios.rds")
setwd("C:/Dev/_INSPER/microIV-apsF")
municipios <- readRDS(file = "municipios.rds")
df <- read_csv("base.csv") %>%
rename("code_muni" = "id_municipio") %>%
mutate(incluso = ifelse(distancia < 150, 1, 0),
grupo = ifelse((tratamento == 1 & incluso == 1), "Tratamento",
ifelse((tratamento == 0 & incluso == 1), "Controle", "Não incluso")))
data <- left_join(municipios, df, by = "code_muni")
gg <- ggplot() +
geom_sf(data = data, aes(fill = grupo), color = "#B3DBCF", lwd = .001) +
scale_fill_manual(values = c("Tratamento" = "#5C5B60",
"Controle"="#D28673",
"Não incluso"= "#B3DBCF"))+
theme_void()
gg
df <- read_csv("base.csv") %>%
rename("code_muni" = "id_municipio") %>%
mutate(incluso = ifelse(distancia < 150, 1, 0),
grupo = ifelse((tratamento == 1 & incluso == 1), "Tratamento",
ifelse((tratamento == 0 & incluso == 1), "Controle", "Não incluso")))
data <- left_join(municipios, df, by = "code_muni")
gg <- ggplot() +
geom_sf(data = data, aes(fill = grupo), color = "#B3DBCF", lwd = .001) +
scale_fill_manual(values = c("Tratamento" = "#5C5B60",
"Controle"="#D28673",
"Não incluso"= "#B3DBCF"))+
theme_void()
gg
